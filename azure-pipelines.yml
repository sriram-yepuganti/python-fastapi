# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  - test
  
  variables:
    python.version : '3.x'
    dockerRegistryServiceConnection: 'acr-devops'
    imageRepository: 'fastapi'
    containerRegistry: 'reacttest1.azurecr.io' #updated with latest
    dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
    tag: '$(Build.BuildId)'
    vmImageName: 'ubuntu-latest'
  
  stages:
  - stage: Build
    displayName: Build and Test stage
    jobs:
    - job: Build
      displayName: Build and test
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python $(python.version)'
        inputs:
          versionSpec: '$(python.version)'
      - script: |
           python -m venv venv
           source venv/bin/activate
           pip install -r requirements.txt
        displayName: 'Install dependencies'
  #    - script: |
  #         source venv/bin/activate
  #         python3 -m pip install requests
  #         pytest tests/
  #      displayName: 'Run tests'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          replaceExistingArchive: true
  #    - task: PublishPipelineArtifact@1
  #      inputs:
  #        targetPath: '$(Pipeline.Workspace)'
  #        artifact: 'FastAPI'
  #        publishLocation: 'pipeline'
      - task: Docker@2
        inputs:
           containerRegistry: '$(dockerRegistryServiceConnection)'
           repository: '$(imageRepository)'
           command: 'buildAndPush'
           Dockerfile: '$(dockerfilePath)'
           tags: |
                  $(tag)
      
  #    - task: AzureRmWebAppDeployment@4
  #      inputs:
  #        ConnectionType: 'AzureRM'
  #        azureSubscription: 'test-service-connection'
  #        appType: 'webAppLinux'
  #        WebAppName: 'pythonfastapi1'
  #        packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
  